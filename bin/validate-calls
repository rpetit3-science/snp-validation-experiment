#! /usr/bin/env python
import argparse as ap
import gzip


def test_if_is_snp(ref, alt):
    return True if len(ref) + len(alt) == 2 else False


if __name__ == '__main__':
    parser = ap.ArgumentParser(
        prog='validate-calls', conflict_handler='resolve',
        description="Assess the results of the variant calls."
    )

    parser.add_argument('true_variants', type=str, metavar="KNOWN_VARIANTS",
                        help=('Variants produced by mutate-reference.'))
    parser.add_argument('called_variants', type=str, metavar="INPUT_VCF_GZ",
                        help='Variants as called by call_variants.')
    args = parser.parse_args()

    # Read known variants
    true_variants = {}
    snps = 0
    with open(args.true_variants, "r") as f:
        for line in f:
            line = line.rstrip()
            position, ref, alt = line.split('\t')
            is_snp = test_if_is_snp(ref, alt)
            true_variants[position] = {
                'ref': ref,
                'alt': alt,
                'is_snp': is_snp
            }

            if is_snp:
                snps += 1

    results = {
        'true_variants': len(true_variants),
        'true_snps': snps,
        'true_indels': len(true_variants) - snps,
        'called_variants': 0,
        'called_snps': 0,
        'called_indels': 0,
        'TP': 0,
        'FP': 0,
        'TN': 0,
    }
    contig_length = 0
    with gzip.open(args.called_variants, "r") as f:
        for line in f:
            if not line.startswith('#'):
                line = line.rstrip()
                cols = line.split('\t')
                position = cols[1]
                ref = cols[3]
                alt = cols[4]
                is_snp = test_if_is_snp(ref, alt)

                # Validate variant
                results['called_variants'] += 1
                if position in true_variants:
                    true_ref = true_variants[position]['ref']
                    true_alt = true_variants[position]['alt']
                    if true_ref == ref and true_alt == alt:
                        results['TP'] += 1
                    else:
                        results['FP'] += 1
                else:
                    results['FP'] += 1

                if is_snp:
                    results['called_snps'] += 1
                else:
                    results['called_indels'] += 1
            elif line.startswith('##contig='):
                # ##contig=<ID=gi|29165615|ref|NC_002745.2|,length=2814816>
                info, length = line.split('length=')
                length = length.split('>')[0]

    results['FN'] = results['true_variants'] - results['TP']
    results['TN'] = int(length) - (
        results['TP'] + results['FP'] + results['FN']
    )

    # See Olson et al. 2015 frontiers in Genetics for calculations
    if results['true_variants']:
        results['accuracy'] = (
            float(results['TP'] + results['TN']) /
            (results['TP'] + results['FP'] + results['FN'] + results['TN'])
        )

        results['specificity'] = (
            float(results['TN']) /
            (results['FP'] + results['TN'])
        )

        results['sensitivity'] = (
            float(results['TP']) /
            (results['TP'] + results['FN'])
        )

        results['precision'] = (
            float(results['TP']) /
            (results['TP'] + results['FP'])
        )

        results['FPR'] = (
            float(results['FP']) /
            (results['TN'] + results['FP'])
        )
    else:
        results['accuracy'] = 0.0000
        results['specificity'] = 0.0000
        results['sensitivity'] = 0.0000
        results['precision'] = 0.0000
        results['FPR'] = 0.0000

    cols = ['true_variants', 'true_snps', 'true_indels', 'called_variants',
            'called_snps', 'called_indels', 'accuracy', 'specificity',
            'sensitivity', 'precision', 'FPR', 'TP', 'FP', 'FN', 'TN']
    print 'input\t{0}'.format('\t'.join(cols))
    print '{0}\t{1}'.format(
        args.true_variants,
        '\t'.join([str(results[col]) for col in cols])
    )
